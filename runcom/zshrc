## Auto Completion
setopt extended_glob
zstyle :compinstall filename '/Users/ege/.zshrc'
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

## Ctrl-P Ctrl-N History
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward
bindkey '\e[A' history-search-backward
bindkey '\e[B' history-search-forward

# if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

## Prompt Setup
set mark-symlinked-directories on
# Show all autocomplete results at once
set page-completions off
# If there are more than 200 possible completions for a word, ask to show them all
set completion-query-items 200
# Show extra file information when completing, like `ls -F` does
set visible-stats on
# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on
# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
set convert-meta off

#
# Settings
#

# Resolve DOTFILES_DIR (assuming ~/.dotfiles on distros without readlink and/or $BASH_SOURCE/$0)
READLINK=$(which greadlink || which readlink)
CURRENT_SCRIPT=$BASH_SOURCE

if [[ -n $CURRENT_SCRIPT && -x "$READLINK" ]]; then
  SCRIPT_PATH=$($READLINK -f "$CURRENT_SCRIPT")
  DOTFILES_DIR=$(dirname "$(dirname "$SCRIPT_PATH")")
elif [ -d "$HOME/.dotfiles" ]; then
  DOTFILES_DIR="$HOME/.dotfiles"
else
  echo "Unable to find dotfiles, exiting."
  return # `exit 1` would quit the shell itself
fi

# Finally we can source the dotfiles (order matters)
for DOTFILE in "$DOTFILES_DIR"/system/{function,function-*,path,env,alias,completion,grep,prompt,promptline,nvm,rvm,custom}; do
  [ -f "$DOTFILE" ] && . "$DOTFILE"
done

if [[ "$(uname -s)" = "Darwin" ]]; then
  for DOTFILE in "$DOTFILES_DIR"/system/{path,env,alias,function}_mac; do
    [ -f "$DOTFILE" ] && . "$DOTFILE"
  done
fi

if [[ "$(uname -s)" = "Linux" ]]; then # Arch Linux, in this case.
  for DOTFILE in "$DOTFILES_DIR"/system/{path,env,alias,function}_tux; do
    [ -f "$DOTFILE" ] && . "$DOTFILE"
  done
  export PATH="$PATH:$HOME/.rvm/bin"
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
fi

[[ "$(uname -s)" = "Darwin" ]] && fpath=(/usr/local/share/zsh-completions $fpath)

# ZPlug
. ~/.zplug/init.zsh

zplug "plugins/git", from:oh-my-zsh
zplug "marzocchi/zsh-notify"
zplug "zlsun/solarized-man"
zplug "zsh-users/zsh-syntax-highlighting", defer:2

if zplug check || zplug install; then
    zplug load 
fi
zplug load 

autoload -Uz compinit
compinit

# Wise words from little cow
#cowthink -f stegosaurus.cow $("$HOME/.dotfiles/bin/shower-thoughts") | lolcat  # some funny stuff.
#

if [[ -z $TMUX && -z $SSH_CONNECTION && -z $DISPLAY && $XDG_VTNR -eq 1 ]]; then
	exec startx
else
	export GPG_TTY=`tty`
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

[[ "$(uname -s)" == "Linux" ]] && . /usr/share/nvm/init-nvm.sh
